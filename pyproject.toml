[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "peakbagger-cli"
version = "1.6.3"
description = "A CLI tool for searching and retrieving mountain peak data from PeakBagger.com"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
authors = [
    {name = "dreamiurg", email = "dreamiurg@users.noreply.github.com"}
]
keywords = ["cli", "mountains", "peaks", "peakbagger", "hiking"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "click>=8.0.0",
    "cloudscraper>=1.2.0",
    "beautifulsoup4>=4.9.0",
    "lxml>=4.6.0",
    "rich>=10.0.0",
    "pydantic>=2.12.3",
    "loguru>=0.7.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.8.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
peakbagger = "peakbagger.cli:main"

[project.urls]
Homepage = "https://github.com/dreamiurg/peakbagger-cli"
Repository = "https://github.com/dreamiurg/peakbagger-cli"
Issues = "https://github.com/dreamiurg/peakbagger-cli/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["peakbagger*"]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "RUF",    # Ruff-specific rules
]
ignore = [
    "E501",   # Line too long (handled by formatter)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["peakbagger"]

[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101"]  # Skip assert_used warnings in tests

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-v --cov=peakbagger --cov-report=term-missing"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[dependency-groups]
dev = [
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
    "pytest-cov>=7.0.0",
    "pytest-vcr>=1.0.2",
    "types-beautifulsoup4>=4.12.0.20250516",
    "vcrpy>=7.0.0",
]
